<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd 
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd">

<context:annotation-config />
	<context:component-scan base-package="com.bt.vosp.webendpoint.impl.helper,com.bt.vosp.capability.nextgenclientauthorisation.impl.helper" />

	<context:property-placeholder
		location="file:${CommonProp},
          file:${DAAdapter},
          file:${NGCAProp},
          file:${ClientFacingWebEndPoint}"
		ignore-unresolvable="false" />


	<bean id="mcaCFIService" class="com.bt.vosp.webendpoint.impl.processor.NGCACFIService"
		scope="request" lazy-init="true" />


	<bean id="tokenBean" class="com.bt.vosp.common.model.TokenBean" />

	<bean id="applicationContextProvider"
		class="com.bt.vosp.common.proploader.ApplicationContextProvider" />

	<bean id="nftLoggingBean" class="com.bt.vosp.common.model.NFTLoggingVO"
		scope="request" lazy-init="true" />

	<bean id="CommonLoadProps" class="com.bt.vosp.common.proploader.PreProcessor"></bean>

	<task:scheduled-tasks scheduler="schedulerCommon">
		<task:scheduled ref="CommonLoadProps" method="commonPropertiesLoading" fixed-rate="${common-propertyLoadingPeriod}" />
	</task:scheduled-tasks>

	<task:scheduler id="schedulerCommon" pool-size="5" />


	<bean id="WebEndPointPreProcessor"
		class="com.bt.vosp.webendpoint.impl.helper.WebEndPointPreProcessor"></bean>




	<task:scheduled-tasks scheduler="schedulerCFIProps">
		<task:scheduled ref="WebEndPointPreProcessor" method="getWebEndPointPropertiesData"
			fixed-rate="${cfi-propertyLoadingPeriod}" />
	</task:scheduled-tasks>

	<task:scheduler id="schedulerCFIProps" pool-size="5" />




	<!--NGCA Properties with configurable time start -->

	<bean id="MCAPreProcessor"
		class="com.bt.vosp.capability.nextgenclientauthorisation.impl.helper.NGCAPreProcessor" />


	<task:scheduled-tasks scheduler="schedulerMCProps">
		<task:scheduled ref="MCAPreProcessor" method="loadNGCAProps"
			fixed-rate="${ngca-propertyLoadingPeriod}" />
	</task:scheduled-tasks>

	<task:scheduler id="schedulerMCProps" pool-size="5" />

	<!--NGCA Loading Properties with configurable time end -->


	<!--daa Loading Properties with configurable time start -->

	<bean id="daaLoadProps"
		class="com.bt.vosp.daa.commons.impl.helper.ReadDAAPropertiesHelper" />

	<task:scheduled-tasks scheduler="schedulerDAAProps">
		<task:scheduled ref="daaLoadProps" method="getPropertiesHelper"
			fixed-rate="${daa-propertyLoadingPeriod}" />
	</task:scheduled-tasks>

	<task:scheduler id="schedulerDAAProps" pool-size="5" />

	<!-- Resolve domain start -->

	<bean id="resolveDomain" class="com.bt.vosp.common.regreader.ResloveDomainHelper"></bean>

	<bean id="resolveService"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean"
		lazy-init="true">
		<property name="targetObject" ref="resolveDomain" />
		<property name="targetMethod" value="resolveDomainHelper" />
	</bean>

	<!-- Resolve domain end -->

	<!-- Entitlements service -->

	<bean id="entitlementService"
		class="com.bt.vosp.daa.mpx.entitlements.impl.processor.PhysicalDeviceImpl"
		scope="request" lazy-init="true" />
	<!--  <bean id="entitlementServiceRemote" class="org.springframework.remoting.rmi.RmiProxyFactoryBean"
		lazy-init="true">
		<property name="serviceUrl"
			value="rmi://${remoteHost}:${remotePort}/PhysicalDevice" />
		<property name="serviceInterface" value="com.bt.vosp.common.service.PhysicalDevice" />
	</bean>  -->

	<!-- Identity service -->
	<bean id="identityService"
		class="com.bt.vosp.daa.mpx.identityservice.impl.processor.IdentityServiceImpl"
		scope="request" lazy-init="true" />
	 <!-- <bean id="identityServiceRemote" class="org.springframework.remoting.rmi.RmiProxyFactoryBean"
		lazy-init="true">
		<property name="serviceUrl"
			value="rmi://${remoteHost}:${remotePort}/IdentityService" />
		<property name="serviceInterface" value="com.bt.vosp.common.service.IdentityService" />
	</bean> -->

</beans>